set-option -g prefix C-s # Set prefix key to Ctrl-s

set -g history-limit 100000

# renumber windows sequentially after closing any of them
set -g renumber-windows on

set -gs escape-time 0

#set -g default-terminal "screen-256color"
#set-option -ga terminal-overrides ",screen-256color:Tc"

#set-option -g default-command "reattach-to-user-namespace -l $SHELL"

set -g mouse on

set-option -g default-shell /usr/bin/zsh

# vim-style paste buffer movement
set-window-option -g mode-keys vi

set -g default-terminal "tmux-256color"
set -as terminal-overrides ',xterm*:sitm=\E[3m'

# Status line {{{

# Pane titles
set -g pane-border-status top
set -g pane-border-format "#[reverse]#[bg=black]#(echo #{pane_current_path} | sed 's#$HOME#~#'):#{pane_current_command}:#{pane_index}#[default]"
set -g pane-border-style fg=colour241
set -g pane-active-border-style fg=cyan

set -g status-fg cyan
set -g status-bg black

set -g status-left-length 40
set -g status-left ''
set -g status-right ''
set -g status-justify centre

set -g window-status-separator ''
set -g window-status-current-format "#[reverse]#[fg=cyan]*#W:#I#[noreverse]#[default] "
set -g window-status-format " #W:#I "

set -g status-left '#[fg=red]#{?client_prefix, #[reverse]PREFIX#[noreverse],       }'

# }}}

# Bindings {{{

bind C-k clear-history

bind ^a send-prefix
bind ^l send ^l
bind -n ^x send ^l \; clearhist
bind ^m select-pane -m
bind ^\; command-prompt
bind ^s command-prompt
bind ^z resize-pane -Z
bind r command-prompt -I "rename-window "
bind ^r command-prompt -I "rename-window "
bind q confirm-before -p "kill pane? (y/n)" kill-pane
bind ^q confirm-before -p "kill pane? (y/n)" kill-pane

bind -T multiKeySplit h split-window -h -c "#{pane_current_path}" \; swap-pane -s '!'
bind -T multiKeySplit j split-window -v -c "#{pane_current_path}"
bind -T multiKeySplit k split-window -v -c "#{pane_current_path}" \; swap-pane -s '!'
bind -T multiKeySplit l split-window -h -c "#{pane_current_path}"
bind s display-message "SPLIT [hjkl]" \; switch-client -T multiKeySplit

# Cycle through layouts with PREFIX /
bind / next-layout

bind * source-file "$HOME/.tmux.conf"\; display-message "Reloaded .tmux.conf"
bind c new-window -c '#{pane_current_path}'
bind ^n next-window
bind ^p previous-window

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l

# Resurrect bindings
set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'

set-option -s set-clipboard on
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'yank'
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'yank'

set-option update-environment "AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN AWS_SECURITY_TOKEN"

# }}}

# Plugins {{{

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-cpu'

# }}}
