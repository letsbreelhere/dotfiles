map <space> <leader>
map <leader>q :q<cr>
map <leader>w :w<cr>

map Y y$
map <leader>y "+y
map <leader>Y "+y$
map <leader>p "+p
map <leader>P "+P
map <silent> <leader><cr> :set hlsearch!<cr>
map <silent> <leader>n :NERDTreeToggle<cr>
map <silent> <leader><space> <nop>
map <leader>= <C-w>=

map <leader>be :BufExplorer<cr>

map <leader>\ :vs<cr>
map <leader>- :sp<cr>

imap <c-p> <c-r>=SuperTabAlternateCompletion("\<lt>c-x>\<lt>c-o>")<cr>

" Don't leave visual mode after indent
vnoremap > >gv
vnoremap < <gv

set wildmode=longest,list,full
set wildmenu
set undofile
set undodir=$HOME/.vimundo/

set splitright
set splitbelow

set nowrap
set textwidth=80

set cursorline

let g:neomake_open_list=0
autocmd! BufWritePost * Neomake

if executable('eslint')
  function Fix()
    silent exec "! eslint --fix %"
    exec "Neomake"
  endfunction

  command -nargs=0 Fix call Fix()

  map <silent> <leader>f :Fix<cr>
endif

if executable('ag')
  let g:ackprg = 'ag'

  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0

  " K searches the project for the word under the cursor
  nnoremap K :Ack! "\b<C-R><C-W>\b"<CR>

  " Immensely janky find and replace.
  " Here mostly so I remember I can do `cfdo`.
  function Far(from, to)
    let l:oldhighlight = g:ackhighlight
    let g:ackhighlight = 1
    exec "Ack '" . a:from . "'"
    exec "cfdo %s//" . a:to . "/gc | w"
    let g:ackhighlight = l:oldhighlight
  endfunction

  command -nargs=+ Far call Far(<f-args>)
  command -nargs=+ Ag :Ack <args>
endif

" Airline styling
let g:airline_section_x='' " Don't display filetype
let g:airline_section_b='' " Don't display branch
let g:airline_section_z='%p:%v' " Less flashy line:column display
